// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: models/v1/firestore_interface.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FirestoreItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type         []string `protobuf:"bytes,3,rep,name=type,proto3" json:"type,omitempty"`
	BusinessId   string   `protobuf:"bytes,4,opt,name=businessId,proto3" json:"businessId,omitempty"`
	BusinessName string   `protobuf:"bytes,5,opt,name=businessName,proto3" json:"businessName,omitempty"`
	Detail       string   `protobuf:"bytes,6,opt,name=detail,proto3" json:"detail,omitempty"`
	Favorites    int32    `protobuf:"varint,7,opt,name=favorites,proto3" json:"favorites,omitempty"`
	Day          Day      `protobuf:"varint,8,opt,name=day,proto3,enum=TapMars.models.v1.Day" json:"day,omitempty"`
	Bleeds       bool     `protobuf:"varint,9,opt,name=bleeds,proto3" json:"bleeds,omitempty"`
	Start        string   `protobuf:"bytes,10,opt,name=start,proto3" json:"start,omitempty"`
	End          string   `protobuf:"bytes,11,opt,name=end,proto3" json:"end,omitempty"`
	FromOpen     bool     `protobuf:"varint,12,opt,name=fromOpen,proto3" json:"fromOpen,omitempty"`
	ToClose      bool     `protobuf:"varint,13,opt,name=toClose,proto3" json:"toClose,omitempty"`
	H3Index6     string   `protobuf:"bytes,14,opt,name=h3index6,proto3" json:"h3index6,omitempty"`
	H3Index7     string   `protobuf:"bytes,15,opt,name=h3index7,proto3" json:"h3index7,omitempty"`
	H3Index8     string   `protobuf:"bytes,16,opt,name=h3index8,proto3" json:"h3index8,omitempty"`
	H3Index15    string   `protobuf:"bytes,17,opt,name=h3index15,proto3" json:"h3index15,omitempty"`
	DateCreated  string   `protobuf:"bytes,18,opt,name=dateCreated,proto3" json:"dateCreated,omitempty"`
	LastModified string   `protobuf:"bytes,19,opt,name=lastModified,proto3" json:"lastModified,omitempty"`
}

func (x *FirestoreItem) Reset() {
	*x = FirestoreItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_v1_firestore_interface_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirestoreItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirestoreItem) ProtoMessage() {}

func (x *FirestoreItem) ProtoReflect() protoreflect.Message {
	mi := &file_models_v1_firestore_interface_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirestoreItem.ProtoReflect.Descriptor instead.
func (*FirestoreItem) Descriptor() ([]byte, []int) {
	return file_models_v1_firestore_interface_proto_rawDescGZIP(), []int{0}
}

func (x *FirestoreItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FirestoreItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FirestoreItem) GetType() []string {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *FirestoreItem) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *FirestoreItem) GetBusinessName() string {
	if x != nil {
		return x.BusinessName
	}
	return ""
}

func (x *FirestoreItem) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *FirestoreItem) GetFavorites() int32 {
	if x != nil {
		return x.Favorites
	}
	return 0
}

func (x *FirestoreItem) GetDay() Day {
	if x != nil {
		return x.Day
	}
	return Day_Monday
}

func (x *FirestoreItem) GetBleeds() bool {
	if x != nil {
		return x.Bleeds
	}
	return false
}

func (x *FirestoreItem) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *FirestoreItem) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *FirestoreItem) GetFromOpen() bool {
	if x != nil {
		return x.FromOpen
	}
	return false
}

func (x *FirestoreItem) GetToClose() bool {
	if x != nil {
		return x.ToClose
	}
	return false
}

func (x *FirestoreItem) GetH3Index6() string {
	if x != nil {
		return x.H3Index6
	}
	return ""
}

func (x *FirestoreItem) GetH3Index7() string {
	if x != nil {
		return x.H3Index7
	}
	return ""
}

func (x *FirestoreItem) GetH3Index8() string {
	if x != nil {
		return x.H3Index8
	}
	return ""
}

func (x *FirestoreItem) GetH3Index15() string {
	if x != nil {
		return x.H3Index15
	}
	return ""
}

func (x *FirestoreItem) GetDateCreated() string {
	if x != nil {
		return x.DateCreated
	}
	return ""
}

func (x *FirestoreItem) GetLastModified() string {
	if x != nil {
		return x.LastModified
	}
	return ""
}

type FirestoreBusiness struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Favorites    int32           `protobuf:"varint,3,opt,name=favorites,proto3" json:"favorites,omitempty"`
	Monday       *OperationalDay `protobuf:"bytes,4,opt,name=monday,proto3" json:"monday,omitempty"`
	Tuesday      *OperationalDay `protobuf:"bytes,5,opt,name=tuesday,proto3" json:"tuesday,omitempty"`
	Wednesday    *OperationalDay `protobuf:"bytes,6,opt,name=wednesday,proto3" json:"wednesday,omitempty"`
	Thursday     *OperationalDay `protobuf:"bytes,7,opt,name=thursday,proto3" json:"thursday,omitempty"`
	Friday       *OperationalDay `protobuf:"bytes,8,opt,name=friday,proto3" json:"friday,omitempty"`
	Saturday     *OperationalDay `protobuf:"bytes,9,opt,name=saturday,proto3" json:"saturday,omitempty"`
	Sunday       *OperationalDay `protobuf:"bytes,10,opt,name=sunday,proto3" json:"sunday,omitempty"`
	Address      *Address        `protobuf:"bytes,11,opt,name=address,proto3" json:"address,omitempty"`
	H3Index6     string          `protobuf:"bytes,12,opt,name=h3index6,proto3" json:"h3index6,omitempty"`
	H3Index7     string          `protobuf:"bytes,13,opt,name=h3index7,proto3" json:"h3index7,omitempty"`
	H3Index8     string          `protobuf:"bytes,14,opt,name=h3index8,proto3" json:"h3index8,omitempty"`
	H3Index15    string          `protobuf:"bytes,15,opt,name=h3index15,proto3" json:"h3index15,omitempty"`
	DateCreated  string          `protobuf:"bytes,16,opt,name=dateCreated,proto3" json:"dateCreated,omitempty"`
	LastModified string          `protobuf:"bytes,17,opt,name=lastModified,proto3" json:"lastModified,omitempty"`
}

func (x *FirestoreBusiness) Reset() {
	*x = FirestoreBusiness{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_v1_firestore_interface_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirestoreBusiness) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirestoreBusiness) ProtoMessage() {}

func (x *FirestoreBusiness) ProtoReflect() protoreflect.Message {
	mi := &file_models_v1_firestore_interface_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirestoreBusiness.ProtoReflect.Descriptor instead.
func (*FirestoreBusiness) Descriptor() ([]byte, []int) {
	return file_models_v1_firestore_interface_proto_rawDescGZIP(), []int{1}
}

func (x *FirestoreBusiness) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FirestoreBusiness) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FirestoreBusiness) GetFavorites() int32 {
	if x != nil {
		return x.Favorites
	}
	return 0
}

func (x *FirestoreBusiness) GetMonday() *OperationalDay {
	if x != nil {
		return x.Monday
	}
	return nil
}

func (x *FirestoreBusiness) GetTuesday() *OperationalDay {
	if x != nil {
		return x.Tuesday
	}
	return nil
}

func (x *FirestoreBusiness) GetWednesday() *OperationalDay {
	if x != nil {
		return x.Wednesday
	}
	return nil
}

func (x *FirestoreBusiness) GetThursday() *OperationalDay {
	if x != nil {
		return x.Thursday
	}
	return nil
}

func (x *FirestoreBusiness) GetFriday() *OperationalDay {
	if x != nil {
		return x.Friday
	}
	return nil
}

func (x *FirestoreBusiness) GetSaturday() *OperationalDay {
	if x != nil {
		return x.Saturday
	}
	return nil
}

func (x *FirestoreBusiness) GetSunday() *OperationalDay {
	if x != nil {
		return x.Sunday
	}
	return nil
}

func (x *FirestoreBusiness) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *FirestoreBusiness) GetH3Index6() string {
	if x != nil {
		return x.H3Index6
	}
	return ""
}

func (x *FirestoreBusiness) GetH3Index7() string {
	if x != nil {
		return x.H3Index7
	}
	return ""
}

func (x *FirestoreBusiness) GetH3Index8() string {
	if x != nil {
		return x.H3Index8
	}
	return ""
}

func (x *FirestoreBusiness) GetH3Index15() string {
	if x != nil {
		return x.H3Index15
	}
	return ""
}

func (x *FirestoreBusiness) GetDateCreated() string {
	if x != nil {
		return x.DateCreated
	}
	return ""
}

func (x *FirestoreBusiness) GetLastModified() string {
	if x != nil {
		return x.LastModified
	}
	return ""
}

type OperationalDay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start    string `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End      string `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Bleeds   bool   `protobuf:"varint,3,opt,name=bleeds,proto3" json:"bleeds,omitempty"`
	IsClosed bool   `protobuf:"varint,4,opt,name=isClosed,proto3" json:"isClosed,omitempty"`
}

func (x *OperationalDay) Reset() {
	*x = OperationalDay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_v1_firestore_interface_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationalDay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationalDay) ProtoMessage() {}

func (x *OperationalDay) ProtoReflect() protoreflect.Message {
	mi := &file_models_v1_firestore_interface_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationalDay.ProtoReflect.Descriptor instead.
func (*OperationalDay) Descriptor() ([]byte, []int) {
	return file_models_v1_firestore_interface_proto_rawDescGZIP(), []int{2}
}

func (x *OperationalDay) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *OperationalDay) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *OperationalDay) GetBleeds() bool {
	if x != nil {
		return x.Bleeds
	}
	return false
}

func (x *OperationalDay) GetIsClosed() bool {
	if x != nil {
		return x.IsClosed
	}
	return false
}

var File_models_v1_firestore_interface_proto protoreflect.FileDescriptor

var file_models_v1_firestore_interface_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x72, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x54, 0x61, 0x70, 0x4d, 0x61, 0x72, 0x73, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x13, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99, 0x04, 0x0a, 0x0d, 0x46, 0x69, 0x72, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x03, 0x64, 0x61,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x54, 0x61, 0x70, 0x4d, 0x61, 0x72,
	0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x79, 0x52,
	0x03, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6c, 0x65, 0x65, 0x64, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x62, 0x6c, 0x65, 0x65, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x65, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x4f, 0x70, 0x65, 0x6e,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x4f, 0x70, 0x65, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x74, 0x6f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x33,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x36, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x33,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x36, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x33, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x37, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x33, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x37, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x33, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x38, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x33, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x38, 0x12, 0x1c,
	0x0a, 0x09, 0x68, 0x33, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x31, 0x35, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x68, 0x33, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x31, 0x35, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x22, 0xf0, 0x05, 0x0a, 0x11, 0x46, 0x69, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x6d, 0x6f,
	0x6e, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x54, 0x61, 0x70,
	0x4d, 0x61, 0x72, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x79, 0x52, 0x06, 0x6d,
	0x6f, 0x6e, 0x64, 0x61, 0x79, 0x12, 0x3b, 0x0a, 0x07, 0x74, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x54, 0x61, 0x70, 0x4d, 0x61, 0x72, 0x73,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x79, 0x52, 0x07, 0x74, 0x75, 0x65, 0x73, 0x64,
	0x61, 0x79, 0x12, 0x3f, 0x0a, 0x09, 0x77, 0x65, 0x64, 0x6e, 0x65, 0x73, 0x64, 0x61, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x54, 0x61, 0x70, 0x4d, 0x61, 0x72, 0x73, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x79, 0x52, 0x09, 0x77, 0x65, 0x64, 0x6e, 0x65, 0x73,
	0x64, 0x61, 0x79, 0x12, 0x3d, 0x0a, 0x08, 0x74, 0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x54, 0x61, 0x70, 0x4d, 0x61, 0x72, 0x73, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x79, 0x52, 0x08, 0x74, 0x68, 0x75, 0x72, 0x73, 0x64,
	0x61, 0x79, 0x12, 0x39, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x54, 0x61, 0x70, 0x4d, 0x61, 0x72, 0x73, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x44, 0x61, 0x79, 0x52, 0x06, 0x66, 0x72, 0x69, 0x64, 0x61, 0x79, 0x12, 0x3d, 0x0a,
	0x08, 0x73, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x54, 0x61, 0x70, 0x4d, 0x61, 0x72, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44,
	0x61, 0x79, 0x52, 0x08, 0x73, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x12, 0x39, 0x0a, 0x06,
	0x73, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x54,
	0x61, 0x70, 0x4d, 0x61, 0x72, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x79, 0x52,
	0x06, 0x73, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x12, 0x34, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x61, 0x70, 0x4d, 0x61,
	0x72, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x68, 0x33, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x36, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x68, 0x33, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x36, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x33, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x37, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x33, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x37, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x33, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x38, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x33, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x38, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x33, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x31, 0x35, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x33, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x31, 0x35, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x6c, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x6c, 0x65, 0x65, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x62, 0x6c, 0x65, 0x65, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x64, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x54, 0x61, 0x70, 0x4d, 0x61, 0x72, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2d, 0x67, 0x6f, 0x2f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_models_v1_firestore_interface_proto_rawDescOnce sync.Once
	file_models_v1_firestore_interface_proto_rawDescData = file_models_v1_firestore_interface_proto_rawDesc
)

func file_models_v1_firestore_interface_proto_rawDescGZIP() []byte {
	file_models_v1_firestore_interface_proto_rawDescOnce.Do(func() {
		file_models_v1_firestore_interface_proto_rawDescData = protoimpl.X.CompressGZIP(file_models_v1_firestore_interface_proto_rawDescData)
	})
	return file_models_v1_firestore_interface_proto_rawDescData
}

var file_models_v1_firestore_interface_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_models_v1_firestore_interface_proto_goTypes = []interface{}{
	(*FirestoreItem)(nil),     // 0: TapMars.models.v1.FirestoreItem
	(*FirestoreBusiness)(nil), // 1: TapMars.models.v1.FirestoreBusiness
	(*OperationalDay)(nil),    // 2: TapMars.models.v1.OperationalDay
	(Day)(0),                  // 3: TapMars.models.v1.Day
	(*Address)(nil),           // 4: TapMars.models.v1.Address
}
var file_models_v1_firestore_interface_proto_depIdxs = []int32{
	3, // 0: TapMars.models.v1.FirestoreItem.day:type_name -> TapMars.models.v1.Day
	2, // 1: TapMars.models.v1.FirestoreBusiness.monday:type_name -> TapMars.models.v1.OperationalDay
	2, // 2: TapMars.models.v1.FirestoreBusiness.tuesday:type_name -> TapMars.models.v1.OperationalDay
	2, // 3: TapMars.models.v1.FirestoreBusiness.wednesday:type_name -> TapMars.models.v1.OperationalDay
	2, // 4: TapMars.models.v1.FirestoreBusiness.thursday:type_name -> TapMars.models.v1.OperationalDay
	2, // 5: TapMars.models.v1.FirestoreBusiness.friday:type_name -> TapMars.models.v1.OperationalDay
	2, // 6: TapMars.models.v1.FirestoreBusiness.saturday:type_name -> TapMars.models.v1.OperationalDay
	2, // 7: TapMars.models.v1.FirestoreBusiness.sunday:type_name -> TapMars.models.v1.OperationalDay
	4, // 8: TapMars.models.v1.FirestoreBusiness.address:type_name -> TapMars.models.v1.Address
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_models_v1_firestore_interface_proto_init() }
func file_models_v1_firestore_interface_proto_init() {
	if File_models_v1_firestore_interface_proto != nil {
		return
	}
	file_models_v1_address_proto_init()
	file_models_v1_day_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_models_v1_firestore_interface_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirestoreItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_v1_firestore_interface_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirestoreBusiness); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_v1_firestore_interface_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationalDay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_models_v1_firestore_interface_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_models_v1_firestore_interface_proto_goTypes,
		DependencyIndexes: file_models_v1_firestore_interface_proto_depIdxs,
		MessageInfos:      file_models_v1_firestore_interface_proto_msgTypes,
	}.Build()
	File_models_v1_firestore_interface_proto = out.File
	file_models_v1_firestore_interface_proto_rawDesc = nil
	file_models_v1_firestore_interface_proto_goTypes = nil
	file_models_v1_firestore_interface_proto_depIdxs = nil
}
