// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package v1

import (
	context "context"
	v1 "github.com/TapMars/protobuf-models-go/v1"
	v12 "github.com/TapMars/protobuf-productSearch/v1"
	v11 "github.com/TapMars/protobuf-userFirestore-go/v1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// UserGatewayClient is the client API for UserGateway service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UserGatewayClient interface {
	GetFavoriteBusinesses(ctx context.Context, in *v1.VoidRequest, opts ...grpc.CallOption) (*v11.FavoriteBusinessesResponse, error)
	GetFavoriteItems(ctx context.Context, in *v1.VoidRequest, opts ...grpc.CallOption) (*v11.FavoriteItemsResponse, error)
	AddFavoriteBusiness(ctx context.Context, in *ChangeRequest, opts ...grpc.CallOption) (*v1.SuccessResponse, error)
	DeleteFavoriteBusiness(ctx context.Context, in *ChangeRequest, opts ...grpc.CallOption) (*v1.SuccessResponse, error)
	AddFavoriteItem(ctx context.Context, in *ChangeRequest, opts ...grpc.CallOption) (*v1.SuccessResponse, error)
	DeleteFavoriteItem(ctx context.Context, in *ChangeRequest, opts ...grpc.CallOption) (*v1.SuccessResponse, error)
	SearchItems(ctx context.Context, in *v12.SearchItemRequest, opts ...grpc.CallOption) (*v12.SearchItemResponse, error)
	GetItem(ctx context.Context, in *v12.ItemRequest, opts ...grpc.CallOption) (*v12.ItemResponse, error)
	GetBusiness(ctx context.Context, in *v12.BusinessRequest, opts ...grpc.CallOption) (*v12.BusinessResponse, error)
}

type userGatewayClient struct {
	cc grpc.ClientConnInterface
}

func NewUserGatewayClient(cc grpc.ClientConnInterface) UserGatewayClient {
	return &userGatewayClient{cc}
}

func (c *userGatewayClient) GetFavoriteBusinesses(ctx context.Context, in *v1.VoidRequest, opts ...grpc.CallOption) (*v11.FavoriteBusinessesResponse, error) {
	out := new(v11.FavoriteBusinessesResponse)
	err := c.cc.Invoke(ctx, "/TapMars.userGateway.v1.UserGateway/GetFavoriteBusinesses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userGatewayClient) GetFavoriteItems(ctx context.Context, in *v1.VoidRequest, opts ...grpc.CallOption) (*v11.FavoriteItemsResponse, error) {
	out := new(v11.FavoriteItemsResponse)
	err := c.cc.Invoke(ctx, "/TapMars.userGateway.v1.UserGateway/GetFavoriteItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userGatewayClient) AddFavoriteBusiness(ctx context.Context, in *ChangeRequest, opts ...grpc.CallOption) (*v1.SuccessResponse, error) {
	out := new(v1.SuccessResponse)
	err := c.cc.Invoke(ctx, "/TapMars.userGateway.v1.UserGateway/AddFavoriteBusiness", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userGatewayClient) DeleteFavoriteBusiness(ctx context.Context, in *ChangeRequest, opts ...grpc.CallOption) (*v1.SuccessResponse, error) {
	out := new(v1.SuccessResponse)
	err := c.cc.Invoke(ctx, "/TapMars.userGateway.v1.UserGateway/DeleteFavoriteBusiness", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userGatewayClient) AddFavoriteItem(ctx context.Context, in *ChangeRequest, opts ...grpc.CallOption) (*v1.SuccessResponse, error) {
	out := new(v1.SuccessResponse)
	err := c.cc.Invoke(ctx, "/TapMars.userGateway.v1.UserGateway/AddFavoriteItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userGatewayClient) DeleteFavoriteItem(ctx context.Context, in *ChangeRequest, opts ...grpc.CallOption) (*v1.SuccessResponse, error) {
	out := new(v1.SuccessResponse)
	err := c.cc.Invoke(ctx, "/TapMars.userGateway.v1.UserGateway/DeleteFavoriteItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userGatewayClient) SearchItems(ctx context.Context, in *v12.SearchItemRequest, opts ...grpc.CallOption) (*v12.SearchItemResponse, error) {
	out := new(v12.SearchItemResponse)
	err := c.cc.Invoke(ctx, "/TapMars.userGateway.v1.UserGateway/SearchItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userGatewayClient) GetItem(ctx context.Context, in *v12.ItemRequest, opts ...grpc.CallOption) (*v12.ItemResponse, error) {
	out := new(v12.ItemResponse)
	err := c.cc.Invoke(ctx, "/TapMars.userGateway.v1.UserGateway/GetItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userGatewayClient) GetBusiness(ctx context.Context, in *v12.BusinessRequest, opts ...grpc.CallOption) (*v12.BusinessResponse, error) {
	out := new(v12.BusinessResponse)
	err := c.cc.Invoke(ctx, "/TapMars.userGateway.v1.UserGateway/GetBusiness", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserGatewayServer is the server API for UserGateway service.
// All implementations must embed UnimplementedUserGatewayServer
// for forward compatibility
type UserGatewayServer interface {
	GetFavoriteBusinesses(context.Context, *v1.VoidRequest) (*v11.FavoriteBusinessesResponse, error)
	GetFavoriteItems(context.Context, *v1.VoidRequest) (*v11.FavoriteItemsResponse, error)
	AddFavoriteBusiness(context.Context, *ChangeRequest) (*v1.SuccessResponse, error)
	DeleteFavoriteBusiness(context.Context, *ChangeRequest) (*v1.SuccessResponse, error)
	AddFavoriteItem(context.Context, *ChangeRequest) (*v1.SuccessResponse, error)
	DeleteFavoriteItem(context.Context, *ChangeRequest) (*v1.SuccessResponse, error)
	SearchItems(context.Context, *v12.SearchItemRequest) (*v12.SearchItemResponse, error)
	GetItem(context.Context, *v12.ItemRequest) (*v12.ItemResponse, error)
	GetBusiness(context.Context, *v12.BusinessRequest) (*v12.BusinessResponse, error)
	mustEmbedUnimplementedUserGatewayServer()
}

// UnimplementedUserGatewayServer must be embedded to have forward compatible implementations.
type UnimplementedUserGatewayServer struct {
}

func (UnimplementedUserGatewayServer) GetFavoriteBusinesses(context.Context, *v1.VoidRequest) (*v11.FavoriteBusinessesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFavoriteBusinesses not implemented")
}
func (UnimplementedUserGatewayServer) GetFavoriteItems(context.Context, *v1.VoidRequest) (*v11.FavoriteItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFavoriteItems not implemented")
}
func (UnimplementedUserGatewayServer) AddFavoriteBusiness(context.Context, *ChangeRequest) (*v1.SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFavoriteBusiness not implemented")
}
func (UnimplementedUserGatewayServer) DeleteFavoriteBusiness(context.Context, *ChangeRequest) (*v1.SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFavoriteBusiness not implemented")
}
func (UnimplementedUserGatewayServer) AddFavoriteItem(context.Context, *ChangeRequest) (*v1.SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFavoriteItem not implemented")
}
func (UnimplementedUserGatewayServer) DeleteFavoriteItem(context.Context, *ChangeRequest) (*v1.SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFavoriteItem not implemented")
}
func (UnimplementedUserGatewayServer) SearchItems(context.Context, *v12.SearchItemRequest) (*v12.SearchItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchItems not implemented")
}
func (UnimplementedUserGatewayServer) GetItem(context.Context, *v12.ItemRequest) (*v12.ItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItem not implemented")
}
func (UnimplementedUserGatewayServer) GetBusiness(context.Context, *v12.BusinessRequest) (*v12.BusinessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBusiness not implemented")
}
func (UnimplementedUserGatewayServer) mustEmbedUnimplementedUserGatewayServer() {}

// UnsafeUserGatewayServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UserGatewayServer will
// result in compilation errors.
type UnsafeUserGatewayServer interface {
	mustEmbedUnimplementedUserGatewayServer()
}

func RegisterUserGatewayServer(s grpc.ServiceRegistrar, srv UserGatewayServer) {
	s.RegisterService(&UserGateway_ServiceDesc, srv)
}

func _UserGateway_GetFavoriteBusinesses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.VoidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserGatewayServer).GetFavoriteBusinesses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TapMars.userGateway.v1.UserGateway/GetFavoriteBusinesses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserGatewayServer).GetFavoriteBusinesses(ctx, req.(*v1.VoidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserGateway_GetFavoriteItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.VoidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserGatewayServer).GetFavoriteItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TapMars.userGateway.v1.UserGateway/GetFavoriteItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserGatewayServer).GetFavoriteItems(ctx, req.(*v1.VoidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserGateway_AddFavoriteBusiness_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserGatewayServer).AddFavoriteBusiness(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TapMars.userGateway.v1.UserGateway/AddFavoriteBusiness",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserGatewayServer).AddFavoriteBusiness(ctx, req.(*ChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserGateway_DeleteFavoriteBusiness_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserGatewayServer).DeleteFavoriteBusiness(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TapMars.userGateway.v1.UserGateway/DeleteFavoriteBusiness",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserGatewayServer).DeleteFavoriteBusiness(ctx, req.(*ChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserGateway_AddFavoriteItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserGatewayServer).AddFavoriteItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TapMars.userGateway.v1.UserGateway/AddFavoriteItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserGatewayServer).AddFavoriteItem(ctx, req.(*ChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserGateway_DeleteFavoriteItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserGatewayServer).DeleteFavoriteItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TapMars.userGateway.v1.UserGateway/DeleteFavoriteItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserGatewayServer).DeleteFavoriteItem(ctx, req.(*ChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserGateway_SearchItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v12.SearchItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserGatewayServer).SearchItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TapMars.userGateway.v1.UserGateway/SearchItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserGatewayServer).SearchItems(ctx, req.(*v12.SearchItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserGateway_GetItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v12.ItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserGatewayServer).GetItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TapMars.userGateway.v1.UserGateway/GetItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserGatewayServer).GetItem(ctx, req.(*v12.ItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserGateway_GetBusiness_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v12.BusinessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserGatewayServer).GetBusiness(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TapMars.userGateway.v1.UserGateway/GetBusiness",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserGatewayServer).GetBusiness(ctx, req.(*v12.BusinessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// UserGateway_ServiceDesc is the grpc.ServiceDesc for UserGateway service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UserGateway_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "TapMars.userGateway.v1.UserGateway",
	HandlerType: (*UserGatewayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFavoriteBusinesses",
			Handler:    _UserGateway_GetFavoriteBusinesses_Handler,
		},
		{
			MethodName: "GetFavoriteItems",
			Handler:    _UserGateway_GetFavoriteItems_Handler,
		},
		{
			MethodName: "AddFavoriteBusiness",
			Handler:    _UserGateway_AddFavoriteBusiness_Handler,
		},
		{
			MethodName: "DeleteFavoriteBusiness",
			Handler:    _UserGateway_DeleteFavoriteBusiness_Handler,
		},
		{
			MethodName: "AddFavoriteItem",
			Handler:    _UserGateway_AddFavoriteItem_Handler,
		},
		{
			MethodName: "DeleteFavoriteItem",
			Handler:    _UserGateway_DeleteFavoriteItem_Handler,
		},
		{
			MethodName: "SearchItems",
			Handler:    _UserGateway_SearchItems_Handler,
		},
		{
			MethodName: "GetItem",
			Handler:    _UserGateway_GetItem_Handler,
		},
		{
			MethodName: "GetBusiness",
			Handler:    _UserGateway_GetBusiness_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "userGateway/v1/userGateway.proto",
}
